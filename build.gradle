buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    ext {
        appName = "Mundus"
        gdxVersion = '1.9.4'
        aiVersion = '1.8.0'
        visuiVersion = '1.2.3'
        kryoVersion = '4.0.0'
        junitVersion = '4.12'
        commonsIoVersion = '2.5'
        commonsLangVersion = '3.4'
        jnaVersion = '4.1.0'
        jnaPlatformVersion = '3.5.2'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":commons") {
    apply plugin: "java"

    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"

        testCompile "junit:junit:$junitVersion"
    }
}

project(":editor") {
    apply plugin: "java"

    dependencies {
        compile project(":commons")

        // libGDX
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

        // gdx-freetype
        compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"

        // gdx-bullet
        // compile "com.badlogicgames.gdx:gdx-bullet:$gdxVersion"
        // compile "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-desktop"

        // gdx-ai
        // compile "com.badlogicgames.gdx:gdx-ai:$aiVersion"

        // other
        compile "com.kotcrab.vis:vis-ui:$visuiVersion"
        compile "com.esotericsoftware:kryo:$kryoVersion"

        // commons
        compile "org.apache.commons:commons-lang3:$commonsLangVersion"
        compile "commons-io:commons-io:$commonsIoVersion"

        // jna
        compile "net.java.dev.jna:jna:$jnaVersion"
        compile "net.java.dev.jna:platform:$jnaPlatformVersion"

        testCompile "junit:junit:$junitVersion"
    }
}

project(":libgdx-runtime") {
    apply plugin: "java"

    dependencies {
        compile project(":commons")
    }
}

tasks.eclipse.doLast {
    delete ".project"
}
